{"version":3,"sources":["webpack:///./node_modules/react-bootstrap/esm/Image.js","webpack:///./src/pages/boba/index.jsx","webpack:///./src/templates/gallery/styles.module.css","webpack:///./src/templates/gallery/index.jsx"],"names":["Image","string","bool","forwardRef","_ref","ref","bsPrefix","className","fluid","rounded","roundedCircle","thumbnail","props","classes","createElement","displayName","defaultProps","Boba","title","nextPost","previousPost","volume","author","description","images","resource","caption","module","exports","Gallery","styles","header","textStyles","headerLg","headerMd","bodyText","map","i","alt","imageWrapper","key","src","captionText"],"mappings":"8FAAA,uGAsCIA,GA5BQ,IAAUC,OAKb,IAAUC,KAKR,IAAUA,KAKJ,IAAUA,KAKd,IAAUA,KAQX,IAAMC,YAAW,SAAUC,EAAMC,GAC3C,IAAIC,EAAWF,EAAKE,SAChBC,EAAYH,EAAKG,UACjBC,EAAQJ,EAAKI,MACbC,EAAUL,EAAKK,QACfC,EAAgBN,EAAKM,cACrBC,EAAYP,EAAKO,UACjBC,EAAQ,YAA8BR,EAAM,CAAC,WAAY,YAAa,QAAS,UAAW,gBAAiB,cAE/GE,EAAW,YAAmBA,EAAU,OACxC,IAAIO,EAAU,IAAWL,GAASF,EAAW,SAAUG,GAAW,UAAWC,GAAiB,iBAAkBC,GAAaL,EAAW,cACxI,OAAoB,IAAMQ,cAAc,MAAO,YAAS,CAEtDT,IAAKA,GACJO,EAAO,CACRL,UAAW,IAAWA,EAAWM,UAGrCb,EAAMe,YAAc,QACpBf,EAAMgB,aAzBa,CACjBR,OAAO,EACPC,SAAS,EACTC,eAAe,EACfC,WAAW,GAsBE,O,oCC1Df,gGAKe,SAASM,IACtB,OACE,kBAAC,IAAD,CAAMC,MAAM,OAAOC,SAAS,YAAYC,aAAa,eAAeC,OAAO,KACzE,kBAAC,IAAD,CACEH,MAAM,OACNI,OAAO,cACPC,YAAY,+bACZC,OAAQ,CACN,CAACC,SAAU,aAAcC,QAAS,4DAClC,CAACD,SAAU,aAAcC,QAAS,4DAClC,CAACD,SAAU,aAAcC,QAAS,kE,qBCd5CC,EAAOC,QAAU,CAAC,OAAS,+BAA+B,YAAc,oCAAoC,aAAe,wC,oCCD3H,iHAMe,SAASC,EAAT,GAAwD,IAAtCX,EAAqC,EAArCA,MAAOK,EAA8B,EAA9BA,YAAaD,EAAiB,EAAjBA,OAAQE,EAAS,EAATA,OAC3D,OACE,6BACE,yBAAKjB,UAAWuB,IAAOC,QACX,MAATb,EAAgB,KAAO,yBAAKX,UAAWyB,IAAWC,UAAWf,GACnD,MAAVI,EAAiB,KAAO,yBAAKf,UAAWyB,IAAWE,UAA3B,MAAyCZ,IAEpE,yBAAKf,UAAWuB,IAAOP,aACL,MAAfA,EAAsB,KAAO,yBAAKhB,UAAWyB,IAAWG,UAAWZ,IAEtE,6BAEIC,EAAOY,KAAI,WAA2BC,GAA3B,IAAEZ,EAAF,EAAEA,SAAUa,EAAZ,EAAYA,IAAKZ,EAAjB,EAAiBA,QAAjB,OACT,yBAAKnB,UAAWuB,IAAOS,cACrB,kBAAC,IAAD,CAAOC,IAAKH,EAAGI,IAAKhB,EAAUa,IAAKA,EAAK9B,OAAK,IACjC,MAAXkB,EAAkB,KAAO,yBAAKnB,UAAWyB,IAAWU,aAAchB","file":"component---src-pages-boba-index-jsx-1dc9842f89e8514d2506.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { useBootstrapPrefix } from './ThemeProvider';\nexport var propTypes = {\n  /**\n   * @default 'img'\n   */\n  bsPrefix: PropTypes.string,\n\n  /**\n   * Sets image as fluid image.\n   */\n  fluid: PropTypes.bool,\n\n  /**\n   * Sets image shape as rounded.\n   */\n  rounded: PropTypes.bool,\n\n  /**\n   * Sets image shape as circle.\n   */\n  roundedCircle: PropTypes.bool,\n\n  /**\n   * Sets image shape as thumbnail.\n   */\n  thumbnail: PropTypes.bool\n};\nvar defaultProps = {\n  fluid: false,\n  rounded: false,\n  roundedCircle: false,\n  thumbnail: false\n};\nvar Image = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      fluid = _ref.fluid,\n      rounded = _ref.rounded,\n      roundedCircle = _ref.roundedCircle,\n      thumbnail = _ref.thumbnail,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\", \"fluid\", \"rounded\", \"roundedCircle\", \"thumbnail\"]);\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'img');\n  var classes = classNames(fluid && bsPrefix + \"-fluid\", rounded && \"rounded\", roundedCircle && \"rounded-circle\", thumbnail && bsPrefix + \"-thumbnail\");\n  return /*#__PURE__*/React.createElement(\"img\", _extends({\n    // eslint-disable-line jsx-a11y/alt-text\n    ref: ref\n  }, props, {\n    className: classNames(className, classes)\n  }));\n});\nImage.displayName = 'Image';\nImage.defaultProps = defaultProps;\nexport default Image;","import React from 'react';\n\nimport Page from '../../components/page';\nimport Gallery from '../../templates/gallery';\n\nexport default function Boba() {\n  return (\n    <Page title=\"Boba\" nextPost=\"/ceramics\" previousPost=\"/bing_recipe\" volume=\"/\">\n      <Gallery \n        title=\"Boba\" \n        author=\"Jessica Lin\"\n        description='Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum'\n        images={[\n          {resource: 'boba_1.jpg', caption: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit.'},\n          {resource: 'boba_2.jpg', caption: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit.'},\n          {resource: 'boba_3.jpg', caption: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit.'},\n        ]}\n      />\n    </Page>\n\n  );\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"styles-module--header--3mZ_R\",\"description\":\"styles-module--description--3F5ur\",\"imageWrapper\":\"styles-module--image-wrapper--w1Wzn\"};","import React from 'react';\nimport {Image} from 'react-bootstrap'\n\nimport textStyles from '../../css/text.module.css';\nimport styles from './styles.module.css';\n\nexport default function Gallery({title, description, author, images}) {\n  return (\n    <div>\n      <div className={styles.header}>\n        {title == null ? null : <div className={textStyles.headerLg}>{title}</div>}\n        {author == null ? null : <div className={textStyles.headerMd}>by {author}</div>}\n      </div>\n      <div className={styles.description}>        \n        {description == null ? null : <div className={textStyles.bodyText}>{description}</div>}\n      </div>\n      <div>\n        {\n          images.map(({resource, alt, caption}, i) => \n            <div className={styles.imageWrapper}>\n              <Image key={i} src={resource} alt={alt} fluid />\n              {caption == null ? null : <div className={textStyles.captionText}>{caption}</div>}\n            </div>\n          )\n        }\n      </div>\n    </div>\n  );\n}\n"],"sourceRoot":""}